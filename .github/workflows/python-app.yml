name: Release Build and Upload

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: ubuntu-latest
            platform: linux
            arch: x86_64
            artifact_extension: ''
          - os: windows-latest
            platform: windows
            arch: x86_64
            artifact_extension: '.exe'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Install Linux dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-0 libgdk-pixbuf2.0-0

      - name: Build with PyInstaller
        run: python build.py
        env:
          PLATFORM: ${{ matrix.platform }}
          ARCH: ${{ matrix.arch }}

      - name: Upload builds
        uses: actions/upload-artifact@v3
        with:
          name: AICopilot-${{ matrix.platform }}-${{ matrix.arch }}
          path: dist/${{ matrix.platform }}_${{ matrix.arch }}
          if-no-files-found: error

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: release-artifacts

      - name: Prepare release files
        run: |
          cd release-artifacts
          find . -type f -name "AICopilot*" -exec chmod +x {} \;
          # Create a directory for the release files
          mkdir -p ../release-files
          # Move all artifacts to the release directory
          find . -type f -name "AICopilot*" -exec cp {} ../release-files/ \;

      - name: Upload to Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: release-files/*
          fail_on_unmatched_files: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}